name: Publish AWML Docker image

on:
  workflow_dispatch:
  push:
    tags:
      - "*"

jobs:
  build-base-image:
    runs-on: ubuntu-22.04-m
    timeout-minutes: 240

    permissions:
      contents: read
      packages: write

    outputs:
      tag: ${{ steps.get-tag.outputs.tag }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          logout: false
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Determine Docker image tag
        id: get-tag
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "tag=latest" >> $GITHUB_OUTPUT
          else
            echo "tag=${{ github.ref_name }}" >> $GITHUB_OUTPUT
          fi

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: |
            ghcr.io/tier4/awml:base-${{ steps.get-tag.outputs.tag }}

  build-ros2-image:
    runs-on: ubuntu-22.04-m
    timeout-minutes: 240
    needs: build-base-image

    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          logout: false
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image with ROS 2 support
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./tools/setting_environment/ros2/Dockerfile
          push: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: |
            ghcr.io/tier4/awml:ros2-${{ needs.build-base-image.outputs.tag }}
          build-args: |
            AWML_BASE_IMAGE=ghcr.io/tier4/awml:base-${{ needs.build-base-image.outputs.tag }}
